# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.4
        environment:
          PIPENV_VENV_IN_PROJECT: true

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "setup.py" }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install dependencies
          command: |
            pipenv install --dev
            
      - run:
          name: Run some tests
          command: |
            PYTHONPATH=. pipenv run pytest -svvv

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "setup.py" }}-{{ checksum "Pipfile.lock" }}


  deploy:
    docker:
      - image: circleci/python:3.6.4
        environment:
          PIPENV_VENV_IN_PROJECT: true

    steps:
      - checkout

      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install dependencies
          command: |
            pipenv install --dev

      - run:
          name: Run some tests
          command: |
            PYTHONPATH=. pipenv run pytest -svvv

      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "venv"

      - run:
          name: Verify git tag vs. version
          command: |
            pipenv run python setup.py verify

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = io_exception" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            pipenv run python setup.py sdist
            pipenv run python setup.py bdist_wheel

      - run:
          name: upload to pypi
          command: |
            pipenv run twine upload dist/*
            
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/